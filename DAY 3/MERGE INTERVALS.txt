class Solution {
    public int[][] merge(int[][] intervals) {
          Arrays.sort(intervals, (i1, i2) -> Integer.compare(i1[0], i2[0]));
    
    List<int[]> results = new ArrayList<>();
    
    for (int i = 0; i<intervals.length; i++) {

        // Create a temporal interval
        int[] temp = new int[2];
        temp[0] = intervals[i][0];
        temp[1] = intervals[i][1];
        
        // As long as the current interval has a bigger or equal value to the next interval
        // we keep merging it and move to the next one
        // Stop if we are at the last interval
        while(i < intervals.length-1 && temp[1] >=  intervals[i+1][0]) {
            temp[1] = Math.max(temp[1], intervals[i + 1][1]);
            i++;
        }
        
        results.add(temp);
    }
    
    return results.toArray(new int[results.size()][]);
    }
}