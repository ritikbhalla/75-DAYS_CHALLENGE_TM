class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> res = new ArrayList<>();
        
        Arrays.sort(nums);
        
        for(int i=0; i<nums.length-3; i++){
            if(i != 0 && nums[i] == nums[i-1])
                continue;
            
            int new_target = target - nums[i];
            
            List<List<Integer>> l = new ArrayList<>();
            
            threeSum(nums, i+1, new_target, l);
            
            for(List<Integer> list: l){
                list.add(nums[i]);
                res.add(list);
            }
        }
        return res;
    }
    
    public void threeSum(int[] nums, int start_index, int target, List<List<Integer>> list){
        for(int i=start_index; i<nums.length-2; i++){
            if(i != start_index && nums[i] == nums[i-1])
                continue;
            
            int new_target = target - nums[i];
            
            List<List<Integer>> l = new ArrayList<>();
            
            int left = i+1;
            int right = nums.length-1;
            
            while(left < right){
                if(nums[left] + nums[right] == new_target){
                    l.add(new ArrayList<>(Arrays.asList(nums[left], nums[right])));
                    
                    while(left < right && nums[left] == nums[left+1])
                        left++;
                    
                    left++;
                }
                else if(nums[left] + nums[right] < new_target)
                    left++;
                else
                    right--;
            }
            
            for(List<Integer> ll: l){
                ll.add(nums[i]);
                list.add(ll);
            }
        }
    
    }
}