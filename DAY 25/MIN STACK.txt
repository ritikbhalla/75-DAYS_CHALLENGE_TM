class MinStack {

    Deque<Integer> main;
    Deque<Integer> min;
    
    public MinStack() {
        main = new ArrayDeque<>();
        min = new ArrayDeque<>();
    }
    
    public void push(int val) {
        main.addFirst(val);
        if(min.isEmpty()||min.getFirst()>=main.getFirst()){
            min.addFirst(main.getFirst());
        }
    }
    
    public void pop() {
        if(main.isEmpty()) return;
        if(main.removeFirst()==min.getFirst()) min.removeFirst();
    }
    
    public int top() {
        return main.getFirst();
    }
    
    public int getMin() {
        return min.getFirst();
    }
}