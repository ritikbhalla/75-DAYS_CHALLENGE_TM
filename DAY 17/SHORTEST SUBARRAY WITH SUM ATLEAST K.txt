class Solution {
    TreeMap<Long, Integer> tp = new TreeMap();
    public int shortestSubarray(int[] nums, int k) {
        long prefixSum = 0;
        tp.put(Long.valueOf(0), -1);
        int min = nums.length + 1;
        for (int i = 0; i < nums.length; i++) {
            prefixSum += nums[i];
            Long key = tp.floorKey(prefixSum - k);
            while(key!=null){
                min = Math.min(min, i - tp.get(key));
                if (min == 1) {
                    return 1;
                }
                 tp.remove(key);
                key = tp.lowerKey(key);
            }
            tp.put(prefixSum, tp.getOrDefault(prefixSum, i));
        }
        return (min == nums.length + 1) ? -1 : min;
    }
}